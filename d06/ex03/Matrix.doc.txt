<- Matrix ----------------------------------------------------------------------
The Matrix class waiting array.

The following keys are required:
’preset’: the matrix type to, mandatory. The value must be one of the Class
constants previoulsy defined.

’scale’: the scale factor, mandatory when ’preset’ is worth SCALE.

’angle’: the rotation angle in radians, mandatory when ’preset’ is worth RX, RY
or RZ.

’vtc’: translation vector, mandatory when ’preset’ is worth TRANSLATION.

’fov’: projection field of view in degrees mandatory when ’preset’ is worth
PROJECTION.

’ratio’: projected image ratio, mandatory when ’preset’ is worth PROJECTION.

’near’: projection’s near clipping plane mandatory when ’preset’ is worth
PROJECTION.

’far’: projection’s far clipping plane mandatory when ’preset’ is worth
PROJECTION.

An instance can be contructed with ’preset’:
new Matrix( array( 'preset' => Matrix::IDENTITY ) );

Or ’preset’ with ’scale’/’angle’/’vtc’/’fov’/’ratio’/’near’/’far’:
new Matrix( array( 'preset' => Matrix::SCALE, 'scale' => 10.0 ) );

new Matrix( array( 'preset' => Matrix::PROJECTION,
			'fov' => 60,
			'ratio' => 640/480,
			'near' => 1.0,
			'far' => -50.0 ) );

Any other use is undefined behaviour.

Our matrices will always be of dimension 4x4.

The class provides the following methods :

	Matrix mult( Matrix $rhs );
	Returns the multiplication of both matrices.

	Vertex transformVertex( Vertex $vtx );
	Returns a new vertex resulting from the transformation of the
	vertex by the matrix.

	---------------------------------------------------------------------- Matrix ->
